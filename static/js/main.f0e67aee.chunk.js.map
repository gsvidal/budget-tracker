{"version":3,"sources":["components/Error.js","components/Amount.js","components/Form.js","components/Expense.js","components/List.js","helpers.js","components/BudgetControl.js","App.js","reportWebVitals.js","index.js"],"names":["Error","message","className","Amount","setBudget","setRemaining","setShowAmount","useState","amount","saveAmount","error","setError","action","onSubmit","event","preventDefault","isNaN","type","placeholder","onChange","parseInt","target","value","Form","setExpense","setCreateExpense","setErrorDiff","expenseName","setExpenseName","expenseAmount","setExpenseAmount","trim","expense","id","nanoid","htmlFor","Expense","List","expenses","map","checkBudget","budget","remaining","titleRemaining","BudgetControl","title","App","showAmount","setExpenses","createExpense","errorDiff","useEffect","budgetRemaining","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f0e67aee.chunk.js","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Error = ({ message }) => (\r\n  <p className=\"alert alert-danger error-diff\">{message}</p>\r\n);\r\n\r\nError.propTypes = {\r\n  message: PropTypes.string.isRequired \r\n}\r\n\r\nexport default Error; ","import React, { Fragment, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Error from './Error';\r\n\r\nconst Amount = ({ setBudget, setRemaining, setShowAmount }) => {\r\n\r\n  // Define state\r\n  const [ amount, saveAmount ] = useState(0);\r\n  const [ error, setError ] = useState(false);\r\n\r\n  // function that reads budget\r\n  const defineAmount = event => {\r\n    saveAmount(parseInt(event.target.value,10));\r\n  }\r\n\r\n  // Submit to set the budget\r\n  const setAmount = event => {\r\n    event.preventDefault();\r\n\r\n    // Budget input validation (positive number)\r\n    if(amount <= 0 || isNaN(amount)) {\r\n      setError(true);\r\n      return;\r\n    }\r\n\r\n    // In case validation is true\r\n    setError(false);\r\n    setBudget(amount);\r\n    setRemaining(amount);\r\n    setShowAmount(false)\r\n  }\r\n\r\n  return(\r\n    <Fragment>\r\n      <h2>Enter your budget amount</h2>\r\n      { error && <Error message=\"Invalid Budget\" /> }\r\n      <form action=\"\"\r\n        onSubmit={setAmount}>\r\n        <input\r\n          type=\"number\"\r\n          className=\"u-full-width\"\r\n          placeholder=\"Enter your budget: 500\"\r\n          onChange={defineAmount}\r\n        />\r\n        <input\r\n          type=\"submit\"\r\n          className=\"button-primary u-full-width\"\r\n          value=\"Set Budget\"  \r\n        />\r\n      </form>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nAmount.propTypes = {\r\n  setBudget: PropTypes.func.isRequired, \r\n  setRemaining: PropTypes.func.isRequired, \r\n  setShowAmount: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Amount;","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Error from './Error';\r\nimport { nanoid } from 'nanoid';\r\n\r\nconst Form = ({ setExpense, setCreateExpense, setErrorDiff }) => {\r\n\r\n  const [ expenseName, setExpenseName ] = useState(\"\");\r\n  const [ expenseAmount, setExpenseAmount ] = useState(\"\");\r\n  const [ error, setError ] = useState(false);\r\n\r\n  // User add an expense\r\n  const addExpense = (event) => {\r\n    event.preventDefault();\r\n\r\n    // Validate\r\n    if(expenseAmount <= 0 || isNaN(expenseAmount) || expenseName.trim() === \"\" ) {\r\n      setError(true);\r\n      return;\r\n    }\r\n\r\n    setError(false);\r\n\r\n    // Made the expense\r\n    const expense = {\r\n      id: nanoid(),\r\n      expenseName,\r\n      expenseAmount\r\n    }\r\n\r\n    // send expense to App component\r\n    setExpense(expense);\r\n    setCreateExpense(true);\r\n\r\n    // Reset form component \r\n    if(!setErrorDiff){\r\n      setExpenseName(\"\");\r\n      setExpenseAmount(\"\");\r\n    }\r\n    \r\n  }\r\n\r\n  return(\r\n    <form action=\"\"\r\n      onSubmit={addExpense}\r\n    >\r\n      <h2>Insert your expenses here</h2>\r\n      { error && \r\n        <Error \r\n          message=\"Both input fields are required or invalid Budget\"\r\n        />\r\n      }\r\n      \r\n      <div className=\"field\">\r\n        <label htmlFor=\"\">Expense name</label>\r\n        <input\r\n          type=\"text\"\r\n          className=\"u-full-width\"\r\n          placeholder=\"E.g. Groceries\"\r\n          value={expenseName}\r\n          onChange={event => setExpenseName(event.target.value)}\r\n        />\r\n      </div>\r\n      <div className=\"field\">\r\n        <label htmlFor=\"\">Expense amount</label>\r\n        <input\r\n          type=\"number\"\r\n          className=\"u-full-width\"\r\n          placeholder=\"E.g. 300\"\r\n          value={expenseAmount}\r\n          onChange={event => setExpenseAmount(parseInt(event.target.value,10))}\r\n        />\r\n      </div>\r\n      <input \r\n        type=\"submit\"\r\n        className=\"button-primary full-width\"\r\n        value=\"Add expense\"\r\n      />\r\n    </form>\r\n  );\r\n}\r\n\r\nForm.propTypes = {\r\n  setExpense: PropTypes.func.isRequired, \r\n  setCreateExpense: PropTypes.func.isRequired\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst Expense = ({ expense }) => (\r\n  <li className=\"expenses\">\r\n    <p>\r\n      {expense.expenseName}\r\n      <span className=\"expense\">$ {expense.expenseAmount}</span>\r\n    </p>\r\n  </li>\r\n);\r\n\r\nExpense.propTypes = {\r\n  expense: PropTypes.object.isRequired\r\n}\r\n\r\nexport default Expense;","import React from 'react';\r\nimport Expense from './Expense';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst List = ({ expenses }) => {\r\n  return(\r\n    <div className=\"expenses-incurred\">\r\n      <h2>Expenses List</h2>\r\n      { expenses.map(expense => \r\n          <Expense \r\n            key={expense.id}\r\n            expense={expense}\r\n          />)\r\n      }\r\n    </div>\r\n  );\r\n}\r\n\r\nList.propTypes = {\r\n  expenses: PropTypes.array.isRequired\r\n}\r\n\r\nexport default List;","export const checkBudget = (budget, remaining) => {\r\n  let className;\r\n  if( remaining <= 0.25 * budget) {\r\n    className = \"alert-danger\";\r\n  } else if (remaining <= 0.5 * budget) {\r\n    className = \"alert-warning\";\r\n  } else {\r\n    className = \"alert-success\";\r\n  }\r\n  return className;\r\n}\r\n\r\nexport const titleRemaining = (budget, remaining) => {\r\n  let title;\r\n  if( remaining <= 0.25 * budget) {\r\n    title = \"Danger: Remaining is less than or equal to a quarter of the budget\";\r\n  } else if (remaining <= 0.5 * budget) {\r\n    title = \"Warning: Remaining is less than or equal to half of the budget\";\r\n  } else {\r\n    title = \"Remaining is greater than half of the budget\";\r\n  }\r\n  return title;\r\n}","import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { checkBudget, titleRemaining } from '../helpers';\r\n\r\nconst BudgetControl = ({ budget, remaining}) => {\r\n  return(\r\n    <Fragment>\r\n      <div className=\"alert alert-primary\">\r\n        Budget: $ {budget}\r\n      </div>\r\n      <div className={`alert ${checkBudget(budget,remaining)}`} title={titleRemaining(budget, remaining)}>\r\n        Remaining: $ {remaining}\r\n      </div>\r\n    </Fragment>\r\n  );\r\n}\r\n\r\nBudgetControl.propTypes = {\r\n  budget: PropTypes.number.isRequired,\r\n  remaining: PropTypes.number.isRequired\r\n}\r\n\r\nexport default BudgetControl;","// import logo from './logo.svg';\nimport React, { useState, useEffect } from 'react';\nimport Amount from './components/Amount';\nimport Form from './components/Form';\nimport List from './components/List';\nimport BudgetControl from './components/BudgetControl';\nimport Error from './components/Error';\n\nfunction App() {\n\n  //Defining state\n  const [ budget, setBudget ] = useState(0);\n  const [ remaining, setRemaining ] = useState(0);\n  const [ showAmount, setShowAmount ] = useState(true);\n  const [ expenses, setExpenses ] = useState([]);\n  const [ expense, setExpense ] = useState({});\n  const [ createExpense, setCreateExpense ] = useState(false);\n  const [ errorDiff, setErrorDiff ] = useState(false);\n\n  useEffect(() => {\n    if(createExpense) {\n      if(expense.expenseAmount <= remaining ) {\n      // Add new budget\n      setExpenses([\n        ...expenses,\n        expense\n      ]);\n      // Substract from current budget\n        const budgetRemaining = remaining - expense.expenseAmount;\n        setRemaining(budgetRemaining); \n        // Reset to false\n      setCreateExpense(false);\n      } else {\n        setErrorDiff(true);\n        // setCreateExpense(true);\n      }\n    }\n  }, [expense, createExpense, expenses, remaining])\n\n  return (\n    <div className=\"container\">\n      <header>\n        <h1>Budget Tracker</h1>\n        <div className=\"content-principal content\">\n          { showAmount \n            ?\n            <Amount\n              setBudget={setBudget}\n              setRemaining={setRemaining}\n              setShowAmount={setShowAmount}\n            /> \n            :\n            <div className=\"row\">\n              <div className=\"one-half column\">\n                <Form \n                  setExpense={setExpense}\n                  setCreateExpense={setCreateExpense}\n                  setErrorDiff={setErrorDiff}\n                />\n              </div>\n              <div className=\"one-half column\">\n                <List \n                  expenses={expenses}\n                />\n                <BudgetControl \n                  budget={budget}\n                  remaining={remaining}\n                />\n              </div>\n              <div className=\"column error-diff\">\n              { errorDiff &&\n                <Error\n                  message=\"You can not spend more than you have left !!!\"\n                />\n              }\n              </div>\n            </div>\n          }\n          \n        </div>\n        \n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}